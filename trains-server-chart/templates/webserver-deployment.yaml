apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.services.webserver.name}}
  labels:
    app.kubernetes.io/name: webserver
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/part-of: trains-server
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/version: {{ .Values.trains.image.tag }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
  namespace: {{ .Values.trains.namespace }}

spec:
  selector:
    app.kubernetes.io/name: webserver
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/part-of: trains-server
    app.kubernetes.io/managed-by: {{ .Release.Service }}
  type: NodePort
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
    nodePort: {{ .Values.services.webserver.nodePort }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: webserver
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/part-of: trains-server
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/version: {{ .Values.trains.image.tag }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
  name: webserver
  namespace: {{ .Values.trains.namespace }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: webserver
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/part-of: trains-server
      app.kubernetes.io/managed-by: {{ .Release.Service }}
  progressDeadlineSeconds: 10
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: webserver
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/part-of: trains-server
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/version: {{ .Values.trains.image.tag }}
        helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - trains
      containers:
      - image: {{ .Values.trains.image.repository }}:{{ .Values.trains.image.tag }}
        name: webserver
        resources:
          requests:
            memory: "25M"
            cpu: "100m"
          limits:
            memory: "50M"
            cpu: "200m"
        args:
        - webserver
      restartPolicy: Always
      nodeSelector:
        {{ .Values.trains.nodeSelector}}